// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSlot.Data;

#nullable disable

namespace TimeSlot.Migrations
{
    [DbContext(typeof(TimeSlotContext))]
    [Migration("20250911171525_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeSlot.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.ToTable("bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            EndTime = new DateTime(2025, 9, 16, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1,
                            StartTime = new DateTime(2025, 9, 16, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Title = "Vejledning m. Jens"
                        },
                        new
                        {
                            BookingId = 2,
                            EndTime = new DateTime(2025, 9, 15, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2,
                            StartTime = new DateTime(2025, 9, 15, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Title = "Møde - Team 3"
                        },
                        new
                        {
                            BookingId = 3,
                            EndTime = new DateTime(2025, 9, 19, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 3,
                            StartTime = new DateTime(2025, 9, 19, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ledermøde"
                        });
                });

            modelBuilder.Entity("TimeSlot.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 10,
                            Name = "A1.01"
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 5,
                            Name = "A1.02"
                        },
                        new
                        {
                            RoomId = 3,
                            Capacity = 4,
                            Name = "A1.03"
                        },
                        new
                        {
                            RoomId = 4,
                            Capacity = 6,
                            Name = "A1.04"
                        });
                });

            modelBuilder.Entity("TimeSlot.Models.Booking", b =>
                {
                    b.HasOne("TimeSlot.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TimeSlot.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
